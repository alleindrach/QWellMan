Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(90)  Query[ "select  SQLOrderBy from pceMDLTable where KeyTbl=:table " ] ,bind[ QMap((":table", QVariant(QString, "wvWellHeader"))) ] 
 (2020-02-13 10:23:48 周四)
Debug: File:(../QWellMan/dao/welldao.cpp) Line:(164)  Query[ "select  w.* from wvWellHeader  w  where  not exists(select * from wvSysRecDel d where w.idwell=d.idwell )  order by wellname" ] ,bind[ QMap() ] 
 (2020-02-13 10:23:48 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(117)  Query[ "select  t.*,m.KeyFld as VisableFld from pceMDLTableField t left join pceMDLTableMainIDFields m  on t.KeyTbl=:table and upper(t.KeyFld)=upper(m.KeyFld) order by m.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvWellHeader"))) ] 
 (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:48 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:49 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:50 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-13 10:23:51 周四)
Debug: File:(../QWellMan/main.cpp) Line:(73) This is a debug message (2020-02-13 18:44:50 周四)
Warning: File:(../QWellMan/main.cpp) Line:(74) This is a warning message (2020-02-13 18:44:50 周四)
Critical: File:(../QWellMan/main.cpp) Line:(75) This is a critical message (2020-02-13 18:44:50 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(62) Profile false 
 (2020-02-13 18:44:53 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(72)  Query[ "select d.* from pceUDLSetTblGroupData d,pceUDLSetTblGroup g,pceUDLProfile p                       where p.KeyProfile=:profile and p.KeySetTblGroup=g.KeySet and g.KeySet=d.KeySet             order by d.DisplayOrder" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 18:44:53 周四)
Debug: File:(../QWellMan/dao/welldao.cpp) Line:(126)  Query[ "select  w.* from wvWellHeader  w  where  not exists(select * from wvSysRecDel d where w.idwell=d.idwell  and w.idwell=d.IDRec) and w.idwell=:id " ] ,bind[ QMap((":id", QVariant(QString, "2A9C7C1C9851D2119DBF0060081C6774"))) ] 
 (2020-02-13 18:44:53 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(167)  Query[ "select  * from pceMDLTableField where KeyTbl=:table order by DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvWellHeader"))) ] 
 (2020-02-13 18:45:01 周四)
Debug: File:(../QWellMan/main.cpp) Line:(73) This is a debug message (2020-02-13 18:51:16 周四)
Warning: File:(../QWellMan/main.cpp) Line:(74) This is a warning message (2020-02-13 18:51:16 周四)
Critical: File:(../QWellMan/main.cpp) Line:(75) This is a critical message (2020-02-13 18:51:16 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(62) Profile false 
 (2020-02-13 19:41:47 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(72)  Query[ "select d.* from pceUDLSetTblGroupData d,pceUDLSetTblGroup g,pceUDLProfile p                       where p.KeyProfile=:profile and p.KeySetTblGroup=g.KeySet and g.KeySet=d.KeySet             order by d.DisplayOrder" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 19:41:47 周四)
Debug: File:(../QWellMan/dao/welldao.cpp) Line:(126)  Query[ "select  w.* from wvWellHeader  w  where  not exists(select * from wvSysRecDel d where w.idwell=d.idwell  and w.idwell=d.IDRec) and w.idwell=:id " ] ,bind[ QMap((":id", QVariant(QString, "66AB429DCE25476F8C12509692F09796"))) ] 
 (2020-02-13 19:41:47 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(282)  Query[ "select  * from pceMDLTable where KeyTbl=:table" ] ,bind[ QMap((":table", QVariant(QString, "wvWellHeader"))) ] 
 (2020-02-13 19:41:55 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(84) Profile false (2020-02-13 19:43:14 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(94)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl" ] ,bind[ QMap((":group", QVariant(QString, "General"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 19:43:14 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(84) Profile false (2020-02-13 19:43:14 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(94)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl" ] ,bind[ QMap((":group", QVariant(QString, "Operations"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 19:43:14 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(84) Profile false (2020-02-13 19:43:14 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(94)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl" ] ,bind[ QMap((":group", QVariant(QString, "Wellbore, Surveys & Formations"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 19:43:14 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(84) Profile false (2020-02-13 19:43:14 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(94)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl" ] ,bind[ QMap((":group", QVariant(QString, "Casing, Cement & Wellheads"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 19:43:14 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(84) Profile false (2020-02-13 19:43:14 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(94)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl" ] ,bind[ QMap((":group", QVariant(QString, "Other in Hole"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 19:43:14 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(84) Profile false (2020-02-13 19:43:14 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(94)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl" ] ,bind[ QMap((":group", QVariant(QString, "Logs, Cores & Reservoir Tests"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 19:43:15 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(84) Profile false (2020-02-13 19:43:15 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(94)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl" ] ,bind[ QMap((":group", QVariant(QString, "Attachments (all)"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 19:43:15 周四)
Debug: File:(../QWellMan/main.cpp) Line:(73) This is a debug message (2020-02-13 21:24:18 周四)
Warning: File:(../QWellMan/main.cpp) Line:(74) This is a warning message (2020-02-13 21:24:18 周四)
Critical: File:(../QWellMan/main.cpp) Line:(75) This is a critical message (2020-02-13 21:24:18 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(64) Profile false 
 (2020-02-13 21:25:13 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(74)  Query[ "select d.* from pceUDLSetTblGroupData d,pceUDLSetTblGroup g,pceUDLProfile p                       where p.KeyProfile=:profile and p.KeySetTblGroup=g.KeySet and g.KeySet=d.KeySet             order by d.DisplayOrder" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:25:13 周四)
Debug: File:(../QWellMan/dao/welldao.cpp) Line:(126)  Query[ "select  w.* from wvWellHeader  w  where  not exists(select * from wvSysRecDel d where w.idwell=d.idwell  and w.idwell=d.IDRec) and w.idwell=:id " ] ,bind[ QMap((":id", QVariant(QString, "2A9C7C1C9851D2119DBF0060081C6774"))) ] 
 (2020-02-13 21:25:13 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(285)  Query[ "select  * from pceMDLTable where KeyTbl=:table" ] ,bind[ QMap((":table", QVariant(QString, "wvWellHeader"))) ] 
 (2020-02-13 21:25:34 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-13 21:26:10 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and tl.Calculate=false and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl  order by t.DisplayOrder" ] Error[ " Parameter count mismatch" ],bind[ QMap((":group", QVariant(QString, "General"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:26:10 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-13 21:26:10 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and tl.Calculate=false and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl  order by t.DisplayOrder" ] Error[ " Parameter count mismatch" ],bind[ QMap((":group", QVariant(QString, "Operations"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:26:10 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-13 21:26:10 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and tl.Calculate=false and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl  order by t.DisplayOrder" ] Error[ " Parameter count mismatch" ],bind[ QMap((":group", QVariant(QString, "Wellbore, Surveys & Formations"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:26:10 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-13 21:26:10 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and tl.Calculate=false and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl  order by t.DisplayOrder" ] Error[ " Parameter count mismatch" ],bind[ QMap((":group", QVariant(QString, "Casing, Cement & Wellheads"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:26:10 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-13 21:26:10 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and tl.Calculate=false and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl  order by t.DisplayOrder" ] Error[ " Parameter count mismatch" ],bind[ QMap((":group", QVariant(QString, "Other in Hole"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:26:10 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-13 21:26:10 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and tl.Calculate=false and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl  order by t.DisplayOrder" ] Error[ " Parameter count mismatch" ],bind[ QMap((":group", QVariant(QString, "Logs, Cores & Reservoir Tests"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:26:10 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-13 21:26:10 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and tl.Calculate=false and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl  order by t.DisplayOrder" ] Error[ " Parameter count mismatch" ],bind[ QMap((":group", QVariant(QString, "Attachments (all)"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:26:10 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(64) Profile false 
 (2020-02-13 21:26:33 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(74)  Query[ "select d.* from pceUDLSetTblGroupData d,pceUDLSetTblGroup g,pceUDLProfile p                       where p.KeyProfile=:profile and p.KeySetTblGroup=g.KeySet and g.KeySet=d.KeySet             order by d.DisplayOrder" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:26:33 周四)
Debug: File:(../QWellMan/dao/welldao.cpp) Line:(126)  Query[ "select  w.* from wvWellHeader  w  where  not exists(select * from wvSysRecDel d where w.idwell=d.idwell  and w.idwell=d.IDRec) and w.idwell=:id " ] ,bind[ QMap((":id", QVariant(QString, "2A9C7C1C9851D2119DBF0060081C6774"))) ] 
 (2020-02-13 21:26:33 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(285)  Query[ "select  * from pceMDLTable where KeyTbl=:table" ] ,bind[ QMap((":table", QVariant(QString, "wvWellHeader"))) ] 
 (2020-02-13 21:26:33 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-13 21:26:33 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and tl.Calculate=false and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl  order by t.DisplayOrder" ] Error[ " Parameter count mismatch" ],bind[ QMap((":group", QVariant(QString, "General"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:26:33 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-13 21:26:33 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and tl.Calculate=false and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl  order by t.DisplayOrder" ] Error[ " Parameter count mismatch" ],bind[ QMap((":group", QVariant(QString, "Operations"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:26:33 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-13 21:26:33 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and tl.Calculate=false and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl  order by t.DisplayOrder" ] Error[ " Parameter count mismatch" ],bind[ QMap((":group", QVariant(QString, "Wellbore, Surveys & Formations"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:26:33 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-13 21:26:33 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and tl.Calculate=false and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl  order by t.DisplayOrder" ] Error[ " Parameter count mismatch" ],bind[ QMap((":group", QVariant(QString, "Casing, Cement & Wellheads"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:26:33 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-13 21:26:33 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and tl.Calculate=false and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl  order by t.DisplayOrder" ] Error[ " Parameter count mismatch" ],bind[ QMap((":group", QVariant(QString, "Other in Hole"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:26:33 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-13 21:26:33 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and tl.Calculate=false and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl  order by t.DisplayOrder" ] Error[ " Parameter count mismatch" ],bind[ QMap((":group", QVariant(QString, "Logs, Cores & Reservoir Tests"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:26:33 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-13 21:26:33 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and tl.Calculate=false and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl  order by t.DisplayOrder" ] Error[ " Parameter count mismatch" ],bind[ QMap((":group", QVariant(QString, "Attachments (all)"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:26:33 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(64) Profile false 
 (2020-02-13 21:28:18 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(74)  Query[ "select d.* from pceUDLSetTblGroupData d,pceUDLSetTblGroup g,pceUDLProfile p                       where p.KeyProfile=:profile and p.KeySetTblGroup=g.KeySet and g.KeySet=d.KeySet             order by d.DisplayOrder" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:28:18 周四)
Debug: File:(../QWellMan/dao/welldao.cpp) Line:(126)  Query[ "select  w.* from wvWellHeader  w  where  not exists(select * from wvSysRecDel d where w.idwell=d.idwell  and w.idwell=d.IDRec) and w.idwell=:id " ] ,bind[ QMap((":id", QVariant(QString, "2A9C7C1C9851D2119DBF0060081C6774"))) ] 
 (2020-02-13 21:28:18 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(285)  Query[ "select  * from pceMDLTable where KeyTbl=:table" ] ,bind[ QMap((":table", QVariant(QString, "wvWellHeader"))) ] 
 (2020-02-13 21:28:18 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-13 21:28:35 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and tl.Calculate=false and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl  order by t.DisplayOrder" ] Error[ " Parameter count mismatch" ],bind[ QMap((":group", QVariant(QString, "General"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:28:35 周四)
Debug: File:(../QWellMan/main.cpp) Line:(73) This is a debug message (2020-02-13 21:32:17 周四)
Warning: File:(../QWellMan/main.cpp) Line:(74) This is a warning message (2020-02-13 21:32:17 周四)
Critical: File:(../QWellMan/main.cpp) Line:(75) This is a critical message (2020-02-13 21:32:17 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(64) Profile false 
 (2020-02-13 21:32:31 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(74)  Query[ "select d.* from pceUDLSetTblGroupData d,pceUDLSetTblGroup g,pceUDLProfile p                       where p.KeyProfile=:profile and p.KeySetTblGroup=g.KeySet and g.KeySet=d.KeySet             order by d.DisplayOrder" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:32:31 周四)
Debug: File:(../QWellMan/dao/welldao.cpp) Line:(126)  Query[ "select  w.* from wvWellHeader  w  where  not exists(select * from wvSysRecDel d where w.idwell=d.idwell  and w.idwell=d.IDRec) and w.idwell=:id " ] ,bind[ QMap((":id", QVariant(QString, "46090773E7664276A97C43D8AF77ADBD"))) ] 
 (2020-02-13 21:32:31 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(285)  Query[ "select  * from pceMDLTable where KeyTbl=:table" ] ,bind[ QMap((":table", QVariant(QString, "wvWellHeader"))) ] 
 (2020-02-13 21:32:31 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-13 21:32:31 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and tl.Calculated=false and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl  order by t.DisplayOrder" ] ,bind[ QMap((":group", QVariant(QString, "General"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:32:31 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:32:38 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(299)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in (wvAnnularFluid,wvCasCompTally,wvJobDrillStringCompTally,wvJobRentalItem,wvJobReportCostRental,wvJobReportDischarge,wvJobReportFluidsLease,wvJobReportFluidsWell,wvJobReportOffshore,wvJobReportSafetyStop,wvJobReportSupportVes,wvJobSafetyIncidentVict,wvOtherStr,wvPerforation,wvPrimeMover,wvProdSetting,wvProduction,wvPumpingUnit,wvRiser,wvRod,wvStimTreat,wvSwab,wvTallyCas,wvTallyDrill,wvTallyTub,wvTestEquip,wvTestSSSV,wvTub,wvTubCompTally,wvWHDrive,wvWellAttributes,wvWellTestFluidAnalysis,wvWellTestFluidLevel,wvWellTestInject,wvWellTestPresTrav,wvWellTestProd,wvWellboreOther,wvWellboreReservoir,wvZone) order by c.DisplayOrder" ] Error[ " Parameter count mismatch" ],bind[ QMap((":table", QVariant(QString, "wvWellHeader"))) ] 
 (2020-02-13 21:32:38 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:32:45 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(299)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in (wvAnnularFluid,wvCasCompTally,wvJobDrillStringCompTally,wvJobRentalItem,wvJobReportCostRental,wvJobReportDischarge,wvJobReportFluidsLease,wvJobReportFluidsWell,wvJobReportOffshore,wvJobReportSafetyStop,wvJobReportSupportVes,wvJobSafetyIncidentVict,wvOtherStr,wvPerforation,wvPrimeMover,wvProdSetting,wvProduction,wvPumpingUnit,wvRiser,wvRod,wvStimTreat,wvSwab,wvTallyCas,wvTallyDrill,wvTallyTub,wvTestEquip,wvTestSSSV,wvTub,wvTubCompTally,wvWHDrive,wvWellAttributes,wvWellTestFluidAnalysis,wvWellTestFluidLevel,wvWellTestInject,wvWellTestPresTrav,wvWellTestProd,wvWellboreOther,wvWellboreReservoir,wvZone) order by c.DisplayOrder" ] Error[ " Parameter count mismatch" ],bind[ QMap((":table", QVariant(QString, "wvWellHeader"))) ] 
 (2020-02-13 21:32:45 周四)
Debug: File:(../QWellMan/main.cpp) Line:(73) This is a debug message (2020-02-13 21:40:16 周四)
Warning: File:(../QWellMan/main.cpp) Line:(74) This is a warning message (2020-02-13 21:40:16 周四)
Critical: File:(../QWellMan/main.cpp) Line:(75) This is a critical message (2020-02-13 21:40:16 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(64) Profile false 
 (2020-02-13 21:40:34 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(74)  Query[ "select d.* from pceUDLSetTblGroupData d,pceUDLSetTblGroup g,pceUDLProfile p                       where p.KeyProfile=:profile and p.KeySetTblGroup=g.KeySet and g.KeySet=d.KeySet             order by d.DisplayOrder" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:40:34 周四)
Debug: File:(../QWellMan/dao/welldao.cpp) Line:(126)  Query[ "select  w.* from wvWellHeader  w  where  not exists(select * from wvSysRecDel d where w.idwell=d.idwell  and w.idwell=d.IDRec) and w.idwell=:id " ] ,bind[ QMap((":id", QVariant(QString, "C1BA6E0688C0424EBAC5B110F33EFC25"))) ] 
 (2020-02-13 21:40:34 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(285)  Query[ "select  * from pceMDLTable where KeyTbl=:table" ] ,bind[ QMap((":table", QVariant(QString, "wvWellHeader"))) ] 
 (2020-02-13 21:40:34 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-13 21:40:34 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and tl.Calculated=false and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl  order by t.DisplayOrder" ] ,bind[ QMap((":group", QVariant(QString, "General"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:40:34 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:40:34 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvWellHeader"))) ] 
 (2020-02-13 21:41:02 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:41:51 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvWellHeader"))) ] 
 (2020-02-13 21:41:51 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:42:08 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvExternalData"))) ] 
 (2020-02-13 21:42:08 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:42:10 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvNote"))) ] 
 (2020-02-13 21:42:11 周四)
Debug: File:(../QWellMan/main.cpp) Line:(73) This is a debug message (2020-02-13 21:42:49 周四)
Warning: File:(../QWellMan/main.cpp) Line:(74) This is a warning message (2020-02-13 21:42:49 周四)
Critical: File:(../QWellMan/main.cpp) Line:(75) This is a critical message (2020-02-13 21:42:49 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(64) Profile false 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(74)  Query[ "select d.* from pceUDLSetTblGroupData d,pceUDLSetTblGroup g,pceUDLProfile p                       where p.KeyProfile=:profile and p.KeySetTblGroup=g.KeySet and g.KeySet=d.KeySet             order by d.DisplayOrder" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/welldao.cpp) Line:(126)  Query[ "select  w.* from wvWellHeader  w  where  not exists(select * from wvSysRecDel d where w.idwell=d.idwell  and w.idwell=d.IDRec) and w.idwell=:id " ] ,bind[ QMap((":id", QVariant(QString, "C1BA6E0688C0424EBAC5B110F33EFC25"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(285)  Query[ "select  * from pceMDLTable where KeyTbl=:table" ] ,bind[ QMap((":table", QVariant(QString, "wvWellHeader"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and tl.Calculated=false and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl  order by t.DisplayOrder" ] ,bind[ QMap((":group", QVariant(QString, "General"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvWellHeader"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvWellHeader"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvExternalData"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvNote"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvNote"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvTask"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvTask"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvDepthAnnotation"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvDepthAnnotation"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and tl.Calculated=false and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl  order by t.DisplayOrder" ] ,bind[ QMap((":group", QVariant(QString, "Operations"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJob"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJob"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobProgramPhase"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobProgramPhaseActivity"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobProgramPhaseActivitySumCalc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobProgramPhaseCostCalc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobProgramPhaseTimeLogCalc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobProgramPhaseMudAdCalc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobProgramGeoSample"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobProgramMud"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobApproval"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobAFECost"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobCostSumAFEDesCalc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobCostSumAFECode1Calc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobCostSumAFECode2Calc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobCostSumAFECode3Calc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobCostSumAFECode4Calc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobCostSumAFECode5Calc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobCostSumAFECode6Calc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobSumOpsCatCalc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobContact"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobRig"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigPump"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigPumpOp"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigPumpChk"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigSolidsCentCyc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigSolidsCentCycChk"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigSolidsShaker"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigSolidsShakerScrn"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigSolidsShakerChk"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigBOP"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigBOPComp"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillBit"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillString"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillStringComp"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillStringCompMotor"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillStringBitNozzle"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillStringDrillParam"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillStringDrillParamHydCalc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillStringDrillParamAVCalc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobWellboreGradient"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobCostCumCalc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobMudAdd"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobMudAddAmt"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobFluidsCalc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReport"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportCostCode4CumCalc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportTimeLog"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportTimeLogSumCalc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportTimeLogCumCalc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportCostGen"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportCostCalc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportCostCumCalc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportCostDesCumCalc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportCostCode1CumCalc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportCostCode2CumCalc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportCostCode3CumCalc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportCostCode5CumCalc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportCostCode6CumCalc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportCostMudCalc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportContacts"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportFluidsCalc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportFluidsZoneCalc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportMudChk"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportPersonnelCount"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportPersCtSumCalc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportProgramPhaseCalc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportSafetyChkCalc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportIntervalProblemCalc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportTimeLogCumCode1Calc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportTimeLogCumCode2Calc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportTimeLogCumCode3Calc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportTimeLogCumCode4Calc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportTimeLogCumUnschedTypCalc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobCostSumDailyEstDesCalc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobCostSumDailyEstCode1Calc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobCostSumDailyEstCode2Calc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobCostSumDailyEstCode3Calc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobCostSumDailyEstCode4Calc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobCostSumDailyEstCode5Calc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobSafetyChk"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobCostSumDailyEstCode6Calc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobPersonnelCountCalc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobSafetyIncident"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobKick"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobKickPres"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobLostCirc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobTimeLogSumCalc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobTimeLogSumCode1Calc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobTimeLogSumCode2Calc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobTimeLogSumCode3Calc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobTimeLogSumCode4Calc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobTimeLogSumUnschedTypCalc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobDischargeCumCalc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillParamGraph1Calc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillStringStartEndCalc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobDayDepthCalc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobDaysVsDepthDailyEstCalc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobDepthDrillHrsCalc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobMaterialTrans"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobPONoCalc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobVendorCalc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobProgramPhaseCode1Calc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and tl.Calculated=false and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl  order by t.DisplayOrder" ] ,bind[ QMap((":group", QVariant(QString, "Wellbore, Surveys & Formations"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvWellbore"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvWellbore"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvWellboreSize"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvWellboreDirSurvey"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvWellboreDirSurveyData"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvWellboreDirSurveyVSCalc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvWellborePBTD"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvWellboreFormation"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvWellboreFormationPickOth"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and tl.Calculated=false and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl  order by t.DisplayOrder" ] ,bind[ QMap((":group", QVariant(QString, "Casing, Cement & Wellheads"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvCas"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvCas"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvCasComp"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvCasCompLnrHngr"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvCasCompECP"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvCasCompSlottedLnr"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvCement"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvCement"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvCementStage"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvCementStageFluid"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvCementStageFluidAdd"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvCementStageFluidVisc"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvWellhead"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvWellhead"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvWellheadComp"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvWellheadCompOutlet"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvTestLeakOff"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvTestLeakOff"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and tl.Calculated=false and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl  order by t.DisplayOrder" ] ,bind[ QMap((":group", QVariant(QString, "Other in Hole"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvOtherInHole"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvOtherInHole"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvOtherInHoleGP"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvOtherInHolePacker"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and tl.Calculated=false and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl  order by t.DisplayOrder" ] ,bind[ QMap((":group", QVariant(QString, "Logs, Cores & Reservoir Tests"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvLog"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvLog"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvLogCurve"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvCore"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvCore"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTrans"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTrans"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTransDST"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTransFlowPer"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTransGauge"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTransGaugeData"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTransRate"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestRFT"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestRFT"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestRFTData"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and tl.Calculated=false and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl  order by t.DisplayOrder" ] ,bind[ QMap((":group", QVariant(QString, "Attachments (all)"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvAttachment"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvAttachment"))) ] 
 (2020-02-13 21:43:03 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(64) Profile false 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(74)  Query[ "select d.* from pceUDLSetTblGroupData d,pceUDLSetTblGroup g,pceUDLProfile p                       where p.KeyProfile=:profile and p.KeySetTblGroup=g.KeySet and g.KeySet=d.KeySet             order by d.DisplayOrder" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/welldao.cpp) Line:(126)  Query[ "select  w.* from wvWellHeader  w  where  not exists(select * from wvSysRecDel d where w.idwell=d.idwell  and w.idwell=d.IDRec) and w.idwell=:id " ] ,bind[ QMap((":id", QVariant(QString, "8395D48586C64BA8AE4B19881FE55AD3"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(285)  Query[ "select  * from pceMDLTable where KeyTbl=:table" ] ,bind[ QMap((":table", QVariant(QString, "wvWellHeader"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and tl.Calculated=false and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl  order by t.DisplayOrder" ] ,bind[ QMap((":group", QVariant(QString, "General"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvWellHeader"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvWellHeader"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvExternalData"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvNote"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvNote"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvTask"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvTask"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvDepthAnnotation"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvDepthAnnotation"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and tl.Calculated=false and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl  order by t.DisplayOrder" ] ,bind[ QMap((":group", QVariant(QString, "Operations"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJob"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJob"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobProgramPhase"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobProgramPhaseActivity"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobProgramPhaseActivitySumCalc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobProgramPhaseCostCalc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobProgramPhaseTimeLogCalc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobProgramPhaseMudAdCalc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobProgramGeoSample"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobProgramMud"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobApproval"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobAFECost"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobCostSumAFEDesCalc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobCostSumAFECode1Calc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobCostSumAFECode2Calc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobCostSumAFECode3Calc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobCostSumAFECode4Calc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobCostSumAFECode5Calc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobCostSumAFECode6Calc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobSumOpsCatCalc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobContact"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobRig"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigPump"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigPumpOp"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigPumpChk"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigSolidsCentCyc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigSolidsCentCycChk"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigSolidsShaker"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigSolidsShakerScrn"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigSolidsShakerChk"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigBOP"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigBOPComp"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillBit"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillString"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillStringComp"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillStringCompMotor"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillStringBitNozzle"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillStringDrillParam"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillStringDrillParamHydCalc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillStringDrillParamAVCalc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobWellboreGradient"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobCostCumCalc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobMudAdd"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobMudAddAmt"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobFluidsCalc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReport"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportCostCode4CumCalc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportTimeLog"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportTimeLogSumCalc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportTimeLogCumCalc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportCostGen"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportCostCalc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportCostCumCalc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportCostDesCumCalc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportCostCode1CumCalc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportCostCode2CumCalc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportCostCode3CumCalc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportCostCode5CumCalc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportCostCode6CumCalc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportCostMudCalc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportContacts"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportFluidsCalc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportFluidsZoneCalc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportMudChk"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportPersonnelCount"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportPersCtSumCalc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportProgramPhaseCalc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportSafetyChkCalc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportIntervalProblemCalc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportTimeLogCumCode1Calc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportTimeLogCumCode2Calc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportTimeLogCumCode3Calc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportTimeLogCumCode4Calc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportTimeLogCumUnschedTypCalc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobCostSumDailyEstDesCalc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobCostSumDailyEstCode1Calc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobCostSumDailyEstCode2Calc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobCostSumDailyEstCode3Calc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobCostSumDailyEstCode4Calc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobCostSumDailyEstCode5Calc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobSafetyChk"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobCostSumDailyEstCode6Calc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobPersonnelCountCalc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobSafetyIncident"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobKick"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobKickPres"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobLostCirc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobTimeLogSumCalc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobTimeLogSumCode1Calc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobTimeLogSumCode2Calc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobTimeLogSumCode3Calc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobTimeLogSumCode4Calc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobTimeLogSumUnschedTypCalc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobDischargeCumCalc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillParamGraph1Calc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillStringStartEndCalc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobDayDepthCalc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobDaysVsDepthDailyEstCalc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobDepthDrillHrsCalc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobMaterialTrans"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobPONoCalc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobVendorCalc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvJobProgramPhaseCode1Calc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and tl.Calculated=false and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl  order by t.DisplayOrder" ] ,bind[ QMap((":group", QVariant(QString, "Wellbore, Surveys & Formations"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvWellbore"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvWellbore"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvWellboreSize"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvWellboreDirSurvey"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvWellboreDirSurveyData"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvWellboreDirSurveyVSCalc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvWellborePBTD"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvWellboreFormation"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvWellboreFormationPickOth"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and tl.Calculated=false and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl  order by t.DisplayOrder" ] ,bind[ QMap((":group", QVariant(QString, "Casing, Cement & Wellheads"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvCas"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvCas"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvCasComp"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvCasCompLnrHngr"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvCasCompECP"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvCasCompSlottedLnr"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvCement"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvCement"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvCementStage"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvCementStageFluid"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvCementStageFluidAdd"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvCementStageFluidVisc"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvWellhead"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvWellhead"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvWellheadComp"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvWellheadCompOutlet"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvTestLeakOff"))) ] 
 (2020-02-13 21:49:41 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:42 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvTestLeakOff"))) ] 
 (2020-02-13 21:49:42 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-13 21:49:42 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and tl.Calculated=false and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl  order by t.DisplayOrder" ] ,bind[ QMap((":group", QVariant(QString, "Other in Hole"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:42 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:42 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvOtherInHole"))) ] 
 (2020-02-13 21:49:42 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:42 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvOtherInHole"))) ] 
 (2020-02-13 21:49:42 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:42 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvOtherInHoleGP"))) ] 
 (2020-02-13 21:49:42 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:42 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvOtherInHolePacker"))) ] 
 (2020-02-13 21:49:42 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-13 21:49:42 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and tl.Calculated=false and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl  order by t.DisplayOrder" ] ,bind[ QMap((":group", QVariant(QString, "Logs, Cores & Reservoir Tests"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:42 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:42 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvLog"))) ] 
 (2020-02-13 21:49:42 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:42 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvLog"))) ] 
 (2020-02-13 21:49:42 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:42 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvLogCurve"))) ] 
 (2020-02-13 21:49:42 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:42 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvCore"))) ] 
 (2020-02-13 21:49:42 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:42 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvCore"))) ] 
 (2020-02-13 21:49:42 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:42 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTrans"))) ] 
 (2020-02-13 21:49:42 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:42 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTrans"))) ] 
 (2020-02-13 21:49:42 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:42 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTransDST"))) ] 
 (2020-02-13 21:49:42 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:42 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTransFlowPer"))) ] 
 (2020-02-13 21:49:42 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:42 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTransGauge"))) ] 
 (2020-02-13 21:49:42 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:42 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTransGaugeData"))) ] 
 (2020-02-13 21:49:42 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:42 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTransRate"))) ] 
 (2020-02-13 21:49:42 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:42 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestRFT"))) ] 
 (2020-02-13 21:49:42 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:42 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestRFT"))) ] 
 (2020-02-13 21:49:42 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:42 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestRFTData"))) ] 
 (2020-02-13 21:49:42 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-13 21:49:42 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and tl.Calculated=false and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl  order by t.DisplayOrder" ] ,bind[ QMap((":group", QVariant(QString, "Attachments (all)"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:42 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:42 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvAttachment"))) ] 
 (2020-02-13 21:49:42 周四)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-13 21:49:42 周四)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder" ] ,bind[ QMap((":table", QVariant(QString, "wvAttachment"))) ] 
 (2020-02-13 21:49:42 周四)
Debug: File:(../QWellMan/main.cpp) Line:(73) This is a debug message (2020-02-14 09:32:53 周五)
Warning: File:(../QWellMan/main.cpp) Line:(74) This is a warning message (2020-02-14 09:32:53 周五)
Critical: File:(../QWellMan/main.cpp) Line:(75) This is a critical message (2020-02-14 09:32:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(64) Profile false 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(74)  Query[ "select d.* from pceUDLSetTblGroupData d,pceUDLSetTblGroup g,pceUDLProfile p                       where p.KeyProfile=:profile and p.KeySetTblGroup=g.KeySet and g.KeySet=d.KeySet             order by d.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/welldao.cpp) Line:(125)  Query[ "select  w.* from wvWellHeader  w  where  not exists(select * from wvSysRecDel d where w.idwell=d.idwell  and w.idwell=d.IDRec) and w.idwell=:id COLLATE NOCASE" ] ,bind[ QMap((":id", QVariant(QString, "A171957CC6064453AE8A52CB3CBFD9EC"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(285)  Query[ "select  * from pceMDLTable where KeyTbl=:table COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellHeader"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and tl.Calculated=false and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl  order by t.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":group", QVariant(QString, "General"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where and t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] Error[ " Parameter count mismatch" ],bind[ QMap((":table", QVariant(QString, "wvWellHeader"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where and t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] Error[ " Parameter count mismatch" ],bind[ QMap((":table", QVariant(QString, "wvWellHeader"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where and t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] Error[ " Parameter count mismatch" ],bind[ QMap((":table", QVariant(QString, "wvNote"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where and t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] Error[ " Parameter count mismatch" ],bind[ QMap((":table", QVariant(QString, "wvNote"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where and t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] Error[ " Parameter count mismatch" ],bind[ QMap((":table", QVariant(QString, "wvTask"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where and t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] Error[ " Parameter count mismatch" ],bind[ QMap((":table", QVariant(QString, "wvTask"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where and t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] Error[ " Parameter count mismatch" ],bind[ QMap((":table", QVariant(QString, "wvDepthAnnotation"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where and t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] Error[ " Parameter count mismatch" ],bind[ QMap((":table", QVariant(QString, "wvDepthAnnotation"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and tl.Calculated=false and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl  order by t.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":group", QVariant(QString, "Operations"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where and t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] Error[ " Parameter count mismatch" ],bind[ QMap((":table", QVariant(QString, "wvJob"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where and t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] Error[ " Parameter count mismatch" ],bind[ QMap((":table", QVariant(QString, "wvJob"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and tl.Calculated=false and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl  order by t.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":group", QVariant(QString, "Wellbore, Surveys & Formations"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where and t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] Error[ " Parameter count mismatch" ],bind[ QMap((":table", QVariant(QString, "wvWellbore"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where and t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] Error[ " Parameter count mismatch" ],bind[ QMap((":table", QVariant(QString, "wvWellbore"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and tl.Calculated=false and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl  order by t.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":group", QVariant(QString, "Casing, Cement & Wellheads"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where and t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] Error[ " Parameter count mismatch" ],bind[ QMap((":table", QVariant(QString, "wvCas"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where and t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] Error[ " Parameter count mismatch" ],bind[ QMap((":table", QVariant(QString, "wvCas"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where and t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] Error[ " Parameter count mismatch" ],bind[ QMap((":table", QVariant(QString, "wvCement"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where and t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] Error[ " Parameter count mismatch" ],bind[ QMap((":table", QVariant(QString, "wvCement"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where and t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] Error[ " Parameter count mismatch" ],bind[ QMap((":table", QVariant(QString, "wvWellhead"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where and t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] Error[ " Parameter count mismatch" ],bind[ QMap((":table", QVariant(QString, "wvWellhead"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where and t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] Error[ " Parameter count mismatch" ],bind[ QMap((":table", QVariant(QString, "wvTestLeakOff"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where and t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] Error[ " Parameter count mismatch" ],bind[ QMap((":table", QVariant(QString, "wvTestLeakOff"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and tl.Calculated=false and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl  order by t.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":group", QVariant(QString, "Other in Hole"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where and t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] Error[ " Parameter count mismatch" ],bind[ QMap((":table", QVariant(QString, "wvOtherInHole"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where and t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] Error[ " Parameter count mismatch" ],bind[ QMap((":table", QVariant(QString, "wvOtherInHole"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and tl.Calculated=false and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl  order by t.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":group", QVariant(QString, "Logs, Cores & Reservoir Tests"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where and t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] Error[ " Parameter count mismatch" ],bind[ QMap((":table", QVariant(QString, "wvLog"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where and t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] Error[ " Parameter count mismatch" ],bind[ QMap((":table", QVariant(QString, "wvLog"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where and t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] Error[ " Parameter count mismatch" ],bind[ QMap((":table", QVariant(QString, "wvCore"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where and t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] Error[ " Parameter count mismatch" ],bind[ QMap((":table", QVariant(QString, "wvCore"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where and t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] Error[ " Parameter count mismatch" ],bind[ QMap((":table", QVariant(QString, "wvWellTestTrans"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where and t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] Error[ " Parameter count mismatch" ],bind[ QMap((":table", QVariant(QString, "wvWellTestTrans"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where and t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] Error[ " Parameter count mismatch" ],bind[ QMap((":table", QVariant(QString, "wvWellTestRFT"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where and t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] Error[ " Parameter count mismatch" ],bind[ QMap((":table", QVariant(QString, "wvWellTestRFT"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and tl.Calculated=false and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl  order by t.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":group", QVariant(QString, "Attachments (all)"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where and t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] Error[ " Parameter count mismatch" ],bind[ QMap((":table", QVariant(QString, "wvAttachment"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where and t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] Error[ " Parameter count mismatch" ],bind[ QMap((":table", QVariant(QString, "wvAttachment"))) ] 
 (2020-02-14 09:32:56 周五)
Debug: File:(../QWellMan/main.cpp) Line:(73) This is a debug message (2020-02-14 09:34:23 周五)
Warning: File:(../QWellMan/main.cpp) Line:(74) This is a warning message (2020-02-14 09:34:23 周五)
Critical: File:(../QWellMan/main.cpp) Line:(75) This is a critical message (2020-02-14 09:34:23 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(64) Profile false 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(74)  Query[ "select d.* from pceUDLSetTblGroupData d,pceUDLSetTblGroup g,pceUDLProfile p                       where p.KeyProfile=:profile and p.KeySetTblGroup=g.KeySet and g.KeySet=d.KeySet             order by d.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/welldao.cpp) Line:(125)  Query[ "select  w.* from wvWellHeader  w  where  not exists(select * from wvSysRecDel d where w.idwell=d.idwell  and w.idwell=d.IDRec) and w.idwell=:id COLLATE NOCASE" ] ,bind[ QMap((":id", QVariant(QString, "034ED7E0A41AD2119DB00060081C6774"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(285)  Query[ "select  * from pceMDLTable where KeyTbl=:table COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellHeader"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and tl.Calculated=false and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl  order by t.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":group", QVariant(QString, "General"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellHeader"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellHeader"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvNote"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvNote"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvTask"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvTask"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvDepthAnnotation"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvDepthAnnotation"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and tl.Calculated=false and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl  order by t.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":group", QVariant(QString, "Operations"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJob"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJob"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobProgramPhase"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobProgramPhaseActivity"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobApproval"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobAFECost"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobContact"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobRig"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigPump"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigPumpOp"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigPumpChk"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigSolidsCentCyc"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigSolidsCentCycChk"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigSolidsShaker"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigSolidsShakerScrn"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigSolidsShakerChk"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigBOP"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigBOPComp"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillBit"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillString"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillStringComp"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillStringCompMotor"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillStringBitNozzle"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillStringDrillParam"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillStringDrillParamHydCalc"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobWellboreGradient"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobMudAdd"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobMudAddAmt"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReport"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportTimeLog"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportTimeLogSumCalc"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportCostGen"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportCostMudCalc"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportContacts"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportMudChk"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobSafetyChk"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobSafetyIncident"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobKick"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobKickPres"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and tl.Calculated=false and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl  order by t.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":group", QVariant(QString, "Wellbore, Surveys & Formations"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellbore"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellbore"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellboreSize"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellboreDirSurvey"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellborePBTD"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellboreFormation"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellboreFormationPickOth"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and tl.Calculated=false and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl  order by t.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":group", QVariant(QString, "Casing, Cement & Wellheads"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvCas"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvCas"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvCasComp"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvCasCompLnrHngr"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvCasCompECP"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvCasCompSlottedLnr"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvCement"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvCement"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvCementStage"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvCementStageFluid"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvCementStageFluidAdd"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvCementStageFluidVisc"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellhead"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellhead"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellheadComp"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellheadCompOutlet"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvTestLeakOff"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvTestLeakOff"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and tl.Calculated=false and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl  order by t.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":group", QVariant(QString, "Other in Hole"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvOtherInHole"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvOtherInHole"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvOtherInHoleGP"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvOtherInHolePacker"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and tl.Calculated=false and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl  order by t.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":group", QVariant(QString, "Logs, Cores & Reservoir Tests"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvLog"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvLog"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvLogCurve"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvCore"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvCore"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTrans"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTrans"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTransFlowPer"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTransGauge"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTransRate"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestRFT"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestRFT"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and tl.Calculated=false and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl  order by t.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":group", QVariant(QString, "Attachments (all)"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvAttachment"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  t2.CaptionLongS is not null and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvAttachment"))) ] 
 (2020-02-14 09:34:25 周五)
Debug: File:(../QWellMan/main.cpp) Line:(73) This is a debug message (2020-02-14 09:38:43 周五)
Warning: File:(../QWellMan/main.cpp) Line:(74) This is a warning message (2020-02-14 09:38:43 周五)
Critical: File:(../QWellMan/main.cpp) Line:(75) This is a critical message (2020-02-14 09:38:43 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(64) Profile false 
 (2020-02-14 09:38:45 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(74)  Query[ "select d.* from pceUDLSetTblGroupData d,pceUDLSetTblGroup g,pceUDLProfile p                       where p.KeyProfile=:profile and p.KeySetTblGroup=g.KeySet and g.KeySet=d.KeySet             order by d.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:45 周五)
Debug: File:(../QWellMan/dao/welldao.cpp) Line:(125)  Query[ "select  w.* from wvWellHeader  w  where  not exists(select * from wvSysRecDel d where w.idwell=d.idwell  and w.idwell=d.IDRec) and w.idwell=:id COLLATE NOCASE" ] ,bind[ QMap((":id", QVariant(QString, "E2F6CD4F925ED211A2FF0080C7793C8F"))) ] 
 (2020-02-14 09:38:45 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(285)  Query[ "select  * from pceMDLTable where KeyTbl=:table COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellHeader"))) ] 
 (2020-02-14 09:38:45 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 09:38:45 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and tl.Calculated=false and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl  order by t.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":group", QVariant(QString, "General"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:45 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:45 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellHeader"))) ] 
 (2020-02-14 09:38:45 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:45 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellHeader"))) ] 
 (2020-02-14 09:38:45 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:45 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvNote"))) ] 
 (2020-02-14 09:38:45 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:45 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvNote"))) ] 
 (2020-02-14 09:38:45 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:45 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvTask"))) ] 
 (2020-02-14 09:38:45 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:45 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvTask"))) ] 
 (2020-02-14 09:38:45 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:45 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvDepthAnnotation"))) ] 
 (2020-02-14 09:38:45 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:45 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvDepthAnnotation"))) ] 
 (2020-02-14 09:38:45 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 09:38:45 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and tl.Calculated=false and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl  order by t.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":group", QVariant(QString, "Operations"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:45 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:45 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJob"))) ] 
 (2020-02-14 09:38:45 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:45 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJob"))) ] 
 (2020-02-14 09:38:45 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:45 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobProgramPhase"))) ] 
 (2020-02-14 09:38:45 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:45 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobProgramPhaseActivity"))) ] 
 (2020-02-14 09:38:45 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:45 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobProgramGeoSample"))) ] 
 (2020-02-14 09:38:45 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:45 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobApproval"))) ] 
 (2020-02-14 09:38:45 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:45 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobAFECost"))) ] 
 (2020-02-14 09:38:45 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobContact"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobRig"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigPump"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigPumpOp"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigPumpChk"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigSolidsCentCyc"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigSolidsCentCycChk"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigSolidsShaker"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigSolidsShakerScrn"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigSolidsShakerChk"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigBOP"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigBOPComp"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillBit"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillString"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillStringComp"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillStringCompMotor"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillStringBitNozzle"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillStringDrillParam"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillStringDrillParamHydCalc"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobWellboreGradient"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobMudAdd"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobMudAddAmt"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReport"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportCostCode4CumCalc"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportTimeLog"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportTimeLogSumCalc"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportCostGen"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportCostCumCalc"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportCostDesCumCalc"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportCostCode1CumCalc"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportCostCode2CumCalc"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportCostCode3CumCalc"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportCostCode5CumCalc"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportCostCode6CumCalc"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportCostMudCalc"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportContacts"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportMudChk"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobSafetyChk"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobSafetyIncident"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobKick"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobKickPres"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and tl.Calculated=false and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl  order by t.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":group", QVariant(QString, "Wellbore, Surveys & Formations"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellbore"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellbore"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellboreSize"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellboreDirSurvey"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellboreDirSurveyData"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellborePBTD"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellboreFormation"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellboreFormationPickOth"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and tl.Calculated=false and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl  order by t.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":group", QVariant(QString, "Casing, Cement & Wellheads"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvCas"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvCas"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvCasComp"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvCasCompLnrHngr"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvCasCompECP"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvCasCompSlottedLnr"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvCement"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvCement"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvCementStage"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvCementStageFluid"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvCementStageFluidAdd"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvCementStageFluidVisc"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellhead"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellhead"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellheadComp"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellheadCompOutlet"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvTestLeakOff"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvTestLeakOff"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and tl.Calculated=false and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl  order by t.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":group", QVariant(QString, "Other in Hole"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvOtherInHole"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvOtherInHole"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvOtherInHoleGP"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvOtherInHolePacker"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and tl.Calculated=false and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl  order by t.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":group", QVariant(QString, "Logs, Cores & Reservoir Tests"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvLog"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvLog"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvLogCurve"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvCore"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvCore"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTrans"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTrans"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTransFlowPer"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTransGauge"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTransRate"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestRFT"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestRFT"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and tl.Calculated=false and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl  order by t.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":group", QVariant(QString, "Attachments (all)"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvAttachment"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where  not (t2.CaptionLongS is  null and t2.CaptionShortP is null and t2.CaptionShortS is null) and  c.KeyTbl=:table and t.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvAttachment"))) ] 
 (2020-02-14 09:38:46 周五)
Debug: File:(../QWellMan/main.cpp) Line:(73) This is a debug message (2020-02-14 09:48:50 周五)
Warning: File:(../QWellMan/main.cpp) Line:(74) This is a warning message (2020-02-14 09:48:50 周五)
Critical: File:(../QWellMan/main.cpp) Line:(75) This is a critical message (2020-02-14 09:48:50 周五)
Debug: File:(../QWellMan/main.cpp) Line:(73) This is a debug message (2020-02-14 09:49:12 周五)
Warning: File:(../QWellMan/main.cpp) Line:(74) This is a warning message (2020-02-14 09:49:12 周五)
Critical: File:(../QWellMan/main.cpp) Line:(75) This is a critical message (2020-02-14 09:49:12 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(64) Profile false 
 (2020-02-14 09:49:14 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(74)  Query[ "select d.* from pceUDLSetTblGroupData d,pceUDLSetTblGroup g,pceUDLProfile p                       where p.KeyProfile=:profile and p.KeySetTblGroup=g.KeySet and g.KeySet=d.KeySet             order by d.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:14 周五)
Debug: File:(../QWellMan/dao/welldao.cpp) Line:(125)  Query[ "select  w.* from wvWellHeader  w  where  not exists(select * from wvSysRecDel d where w.idwell=d.idwell  and w.idwell=d.IDRec) and w.idwell=:id COLLATE NOCASE" ] ,bind[ QMap((":id", QVariant(QString, "D78E41106D42D2119DBC0060081C6774"))) ] 
 (2020-02-14 09:49:14 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(285)  Query[ "select  * from pceMDLTable where KeyTbl=:table COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellHeader"))) ] 
 (2020-02-14 09:49:14 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 09:49:14 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and tl.Calculated=false and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl  order by t.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":group", QVariant(QString, "General"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:14 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:14 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellHeader"))) ] 
 (2020-02-14 09:49:14 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:14 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellHeader"))) ] 
 (2020-02-14 09:49:14 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:14 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvExternalData"))) ] 
 (2020-02-14 09:49:14 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:14 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvNote"))) ] 
 (2020-02-14 09:49:14 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:14 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvNote"))) ] 
 (2020-02-14 09:49:14 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:14 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvTask"))) ] 
 (2020-02-14 09:49:14 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:14 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvTask"))) ] 
 (2020-02-14 09:49:14 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvDepthAnnotation"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvDepthAnnotation"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and tl.Calculated=false and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl  order by t.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":group", QVariant(QString, "Operations"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJob"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJob"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobProgramPhase"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobProgramPhaseActivity"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobProgramGeoSample"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobProgramMud"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobApproval"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobAFECost"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobContact"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobRig"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigPump"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigPumpOp"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigPumpChk"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigSolidsCentCyc"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigSolidsCentCycChk"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigSolidsShaker"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigSolidsShakerScrn"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigSolidsShakerChk"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigBOP"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigBOPComp"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillBit"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillString"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillStringComp"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillStringCompMotor"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillStringBitNozzle"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillStringDrillParam"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobWellboreGradient"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobMudAdd"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobMudAddAmt"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReport"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportTimeLog"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportCostGen"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportContacts"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportMudChk"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportPersonnelCount"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobSafetyChk"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobSafetyIncident"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobKick"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobKickPres"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobLostCirc"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvJobMaterialTrans"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and tl.Calculated=false and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl  order by t.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":group", QVariant(QString, "Wellbore, Surveys & Formations"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellbore"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellbore"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellboreSize"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellboreDirSurvey"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellboreDirSurveyData"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellborePBTD"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellboreFormation"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellboreFormationPickOth"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and tl.Calculated=false and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl  order by t.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":group", QVariant(QString, "Casing, Cement & Wellheads"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvCas"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvCas"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvCasComp"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvCasCompLnrHngr"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvCasCompECP"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvCasCompSlottedLnr"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvCement"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvCement"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvCementStage"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvCementStageFluid"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvCementStageFluidAdd"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvCementStageFluidVisc"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellhead"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellhead"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellheadComp"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellheadCompOutlet"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvTestLeakOff"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvTestLeakOff"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and tl.Calculated=false and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl  order by t.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":group", QVariant(QString, "Other in Hole"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvOtherInHole"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvOtherInHole"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvOtherInHoleGP"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvOtherInHolePacker"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and tl.Calculated=false and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl  order by t.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":group", QVariant(QString, "Logs, Cores & Reservoir Tests"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvLog"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvLog"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvLogCurve"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvCore"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvCore"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTrans"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTrans"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTransDST"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTransFlowPer"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTransGauge"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTransGaugeData"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTransRate"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestRFT"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestRFT"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestRFTData"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile and tl.Calculated=false and p.KeySetTblGroup=t.KeySet and t.GroupName=:group and tl.KeyTbl=t.KeyTbl  order by t.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":group", QVariant(QString, "Attachments (all)"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvAttachment"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table and t2.Calculated=false and t.KeyTbl=c.KeyTbl and t2.KeyTbl=c.KeyTblChild and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild )             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWellAttributes','wvWellboreOther','wvWellboreReservoir','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWHDrive','wvZone') order by c.DisplayOrder COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvAttachment"))) ] 
 (2020-02-14 09:49:15 周五)
Debug: File:(../QWellMan/main.cpp) Line:(73) This is a debug message (2020-02-14 10:13:59 周五)
Warning: File:(../QWellMan/main.cpp) Line:(74) This is a warning message (2020-02-14 10:13:59 周五)
Critical: File:(../QWellMan/main.cpp) Line:(75) This is a critical message (2020-02-14 10:13:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(64) Profile false 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(74)  Query[ "select d.* from pceUDLSetTblGroupData d,pceUDLSetTblGroup g,pceUDLProfile p                       where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblGroup=g.KeySet COLLATE NOCASE and g.KeySet=d.KeySet COLLATE NOCASE             order by d.DisplayOrder " ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/welldao.cpp) Line:(125)  Query[ "select  w.* from wvWellHeader  w  where  not exists(select * from wvSysRecDel d where w.idwell=d.idwell COLLATE NOCASE  and w.idwell=d.IDRec COLLATE NOCASE) and w.idwell=:id COLLATE NOCASE" ] ,bind[ QMap((":id", QVariant(QString, "46810E3DFE964362AB21F45017E4220C"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(285)  Query[ "select  * from pceMDLTable where KeyTbl=:table COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellHeader"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile COLLATE NOCASE and tl.Calculated=false  and p.KeySetTblGroup=t.KeySet COLLATE NOCASE and t.GroupName=:group COLLATE NOCASE and tl.KeyTbl=t.KeyTbl COLLATE NOCASE order by t.DisplayOrder " ] ,bind[ QMap((":group", QVariant(QString, "General"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellHeader"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellHeader"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvExternalData"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvNote"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvNote"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvTask"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvTask"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvDepthAnnotation"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvDepthAnnotation"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile COLLATE NOCASE and tl.Calculated=false  and p.KeySetTblGroup=t.KeySet COLLATE NOCASE and t.GroupName=:group COLLATE NOCASE and tl.KeyTbl=t.KeyTbl COLLATE NOCASE order by t.DisplayOrder " ] ,bind[ QMap((":group", QVariant(QString, "Operations"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJob"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJob"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobProgramPhase"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobProgramPhaseActivity"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobProgramGeoSample"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobProgramMud"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobApproval"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobAFECost"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobContact"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobRig"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigPump"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigPumpOp"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigPumpChk"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigSolidsCentCyc"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigSolidsCentCycChk"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigSolidsShaker"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigSolidsShakerScrn"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigSolidsShakerChk"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigBOP"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigBOPComp"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvjobSupply"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobSupplyAmt"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillBit"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillString"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillStringComp"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillStringCompMotor"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillStringBitNozzle"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillStringDrillParam"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobWellboreGradient"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobMudAdd"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobMudAddAmt"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobReport"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportTimeLog"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportCostGen"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportContacts"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportMudChk"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportPersonnelCount"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobSafetyChk"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobSafetyIncident"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobIntervalProblem"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobIntervalLesson"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobKick"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobKickPres"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobLostCirc"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobMaterialTrans"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile COLLATE NOCASE and tl.Calculated=false  and p.KeySetTblGroup=t.KeySet COLLATE NOCASE and t.GroupName=:group COLLATE NOCASE and tl.KeyTbl=t.KeyTbl COLLATE NOCASE order by t.DisplayOrder " ] ,bind[ QMap((":group", QVariant(QString, "Wellbore, Surveys & Formations"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellbore"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellbore"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellboreSize"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellboreDirSurvey"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellboreDirSurveyData"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellborePBTD"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellboreFormation"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellboreFormationPickOth"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile COLLATE NOCASE and tl.Calculated=false  and p.KeySetTblGroup=t.KeySet COLLATE NOCASE and t.GroupName=:group COLLATE NOCASE and tl.KeyTbl=t.KeyTbl COLLATE NOCASE order by t.DisplayOrder " ] ,bind[ QMap((":group", QVariant(QString, "Casing, Cement & Wellheads"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCas"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCas"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCasComp"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCasCompLnrHngr"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCasCompECP"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCasCompSlottedLnr"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCement"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCement"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCementStage"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCementStageFluid"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCementStageFluidAdd"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCementStageFluidVisc"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellhead"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellhead"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellheadComp"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellheadCompOutlet"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvTestLeakOff"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvTestLeakOff"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile COLLATE NOCASE and tl.Calculated=false  and p.KeySetTblGroup=t.KeySet COLLATE NOCASE and t.GroupName=:group COLLATE NOCASE and tl.KeyTbl=t.KeyTbl COLLATE NOCASE order by t.DisplayOrder " ] ,bind[ QMap((":group", QVariant(QString, "Other in Hole"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvOtherInHole"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvOtherInHole"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvOtherInHoleGP"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvOtherInHolePacker"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile COLLATE NOCASE and tl.Calculated=false  and p.KeySetTblGroup=t.KeySet COLLATE NOCASE and t.GroupName=:group COLLATE NOCASE and tl.KeyTbl=t.KeyTbl COLLATE NOCASE order by t.DisplayOrder " ] ,bind[ QMap((":group", QVariant(QString, "Logs, Cores & Reservoir Tests"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvLog"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvLog"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvLogCurve"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCore"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCore"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTrans"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTrans"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTransDST"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTransFlowPer"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTransGauge"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTransGaugeData"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTransRate"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestRFT"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestRFT"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestRFTData"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile COLLATE NOCASE and tl.Calculated=false  and p.KeySetTblGroup=t.KeySet COLLATE NOCASE and t.GroupName=:group COLLATE NOCASE and tl.KeyTbl=t.KeyTbl COLLATE NOCASE order by t.DisplayOrder " ] ,bind[ QMap((":group", QVariant(QString, "Attachments (all)"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvAttachment"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvAttachment"))) ] 
 (2020-02-14 10:14:02 周五)
Debug: File:(../QWellMan/main.cpp) Line:(73) This is a debug message (2020-02-14 10:23:37 周五)
Warning: File:(../QWellMan/main.cpp) Line:(74) This is a warning message (2020-02-14 10:23:37 周五)
Critical: File:(../QWellMan/main.cpp) Line:(75) This is a critical message (2020-02-14 10:23:37 周五)
Debug: File:(../QWellMan/main.cpp) Line:(73) This is a debug message (2020-02-14 10:28:32 周五)
Warning: File:(../QWellMan/main.cpp) Line:(74) This is a warning message (2020-02-14 10:28:32 周五)
Critical: File:(../QWellMan/main.cpp) Line:(75) This is a critical message (2020-02-14 10:28:32 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(64) Profile false 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(74)  Query[ "select d.* from pceUDLSetTblGroupData d,pceUDLSetTblGroup g,pceUDLProfile p                       where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblGroup=g.KeySet COLLATE NOCASE and g.KeySet=d.KeySet COLLATE NOCASE             order by d.DisplayOrder " ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/welldao.cpp) Line:(125)  Query[ "select  w.* from wvWellHeader  w  where  not exists(select * from wvSysRecDel d where w.idwell=d.idwell COLLATE NOCASE  and w.idwell=d.IDRec COLLATE NOCASE) and w.idwell=:id COLLATE NOCASE" ] ,bind[ QMap((":id", QVariant(QString, "2A9C7C1C9851D2119DBF0060081C6774"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(285)  Query[ "select  * from pceMDLTable where KeyTbl=:table COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellHeader"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile COLLATE NOCASE and tl.Calculated=false  and p.KeySetTblGroup=t.KeySet COLLATE NOCASE and t.GroupName=:group COLLATE NOCASE and tl.KeyTbl=t.KeyTbl COLLATE NOCASE order by t.DisplayOrder " ] ,bind[ QMap((":group", QVariant(QString, "General"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellHeader"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellHeader"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvExternalData"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvNote"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvNote"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvTask"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvTask"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvDepthAnnotation"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvDepthAnnotation"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile COLLATE NOCASE and tl.Calculated=false  and p.KeySetTblGroup=t.KeySet COLLATE NOCASE and t.GroupName=:group COLLATE NOCASE and tl.KeyTbl=t.KeyTbl COLLATE NOCASE order by t.DisplayOrder " ] ,bind[ QMap((":group", QVariant(QString, "Operations"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJob"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJob"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobProgramPhase"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobProgramPhaseActivity"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobProgramGeoSample"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobProgramMud"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobApproval"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobAFECost"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobContact"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobRig"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigPump"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigPumpOp"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigPumpChk"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigSolidsCentCyc"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigSolidsCentCycChk"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigSolidsShaker"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigSolidsShakerScrn"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigSolidsShakerChk"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigBOP"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigBOPComp"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvjobSupply"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobSupplyAmt"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillBit"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillString"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillStringComp"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillStringCompMotor"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillStringBitNozzle"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillStringDrillParam"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobWellboreGradient"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobMudAdd"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobMudAddAmt"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobReport"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportTimeLog"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportCostGen"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportContacts"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportMudChk"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportPersonnelCount"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobSafetyChk"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobSafetyIncident"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobIntervalProblem"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobIntervalLesson"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobKick"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobKickPres"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobLostCirc"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobMaterialTrans"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile COLLATE NOCASE and tl.Calculated=false  and p.KeySetTblGroup=t.KeySet COLLATE NOCASE and t.GroupName=:group COLLATE NOCASE and tl.KeyTbl=t.KeyTbl COLLATE NOCASE order by t.DisplayOrder " ] ,bind[ QMap((":group", QVariant(QString, "Wellbore, Surveys & Formations"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellbore"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellbore"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellboreSize"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellboreDirSurvey"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellboreDirSurveyData"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellborePBTD"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellboreFormation"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellboreFormationPickOth"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile COLLATE NOCASE and tl.Calculated=false  and p.KeySetTblGroup=t.KeySet COLLATE NOCASE and t.GroupName=:group COLLATE NOCASE and tl.KeyTbl=t.KeyTbl COLLATE NOCASE order by t.DisplayOrder " ] ,bind[ QMap((":group", QVariant(QString, "Casing, Cement & Wellheads"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCas"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCas"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCasComp"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCasCompLnrHngr"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCasCompECP"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCasCompSlottedLnr"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCement"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCement"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCementStage"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCementStageFluid"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCementStageFluidAdd"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCementStageFluidVisc"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellhead"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellhead"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellheadComp"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellheadCompOutlet"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvTestLeakOff"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvTestLeakOff"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile COLLATE NOCASE and tl.Calculated=false  and p.KeySetTblGroup=t.KeySet COLLATE NOCASE and t.GroupName=:group COLLATE NOCASE and tl.KeyTbl=t.KeyTbl COLLATE NOCASE order by t.DisplayOrder " ] ,bind[ QMap((":group", QVariant(QString, "Other in Hole"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvOtherInHole"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvOtherInHole"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvOtherInHoleGP"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvOtherInHolePacker"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile COLLATE NOCASE and tl.Calculated=false  and p.KeySetTblGroup=t.KeySet COLLATE NOCASE and t.GroupName=:group COLLATE NOCASE and tl.KeyTbl=t.KeyTbl COLLATE NOCASE order by t.DisplayOrder " ] ,bind[ QMap((":group", QVariant(QString, "Logs, Cores & Reservoir Tests"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvLog"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvLog"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvLogCurve"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCore"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCore"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTrans"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTrans"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTransDST"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTransFlowPer"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTransGauge"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTransGaugeData"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTransRate"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestRFT"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestRFT"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestRFTData"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile COLLATE NOCASE and tl.Calculated=false  and p.KeySetTblGroup=t.KeySet COLLATE NOCASE and t.GroupName=:group COLLATE NOCASE and tl.KeyTbl=t.KeyTbl COLLATE NOCASE order by t.DisplayOrder " ] ,bind[ QMap((":group", QVariant(QString, "Attachments (all)"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvAttachment"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvAttachment"))) ] 
 (2020-02-14 10:29:16 周五)
Debug: File:(../QWellMan/main.cpp) Line:(73) This is a debug message (2020-02-14 10:32:29 周五)
Warning: File:(../QWellMan/main.cpp) Line:(74) This is a warning message (2020-02-14 10:32:29 周五)
Critical: File:(../QWellMan/main.cpp) Line:(75) This is a critical message (2020-02-14 10:32:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(101)  Query[ "select  SQLOrderBy from pceMDLTable where KeyTbl=:table COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellHeader"))) ] 
 (2020-02-14 10:33:46 周五)
Debug: File:(../QWellMan/dao/welldao.cpp) Line:(79)  Query[ "select  w.* from wvWellHeader  w  where  not exists(select * from wvSysRecDel d where w.idwell=d.idwell COLLATE NOCASE and w.idwell=d.IDRec  COLLATE NOCASE) and  exists(select *  from wvSys02 r where w.idwell=r.idwell COLLATE NOCASE)  order by wellname COLLATE NOCASE" ] ,bind[ QMap() ] 
 (2020-02-14 10:33:46 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(128)  Query[ "select  t.*,m.KeyFld as VisableFld from pceMDLTableField t left join pceMDLTableMainIDFields m  on t.KeyTbl=:table  COLLATE NOCASE and t.KeyFld=m.KeyFld COLLATE NOCASE order by m.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellHeader"))) ] 
 (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:47 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:48 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:49 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:50 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(101)  Query[ "select  SQLOrderBy from pceMDLTable where KeyTbl=:table COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellHeader"))) ] 
 (2020-02-14 10:33:51 周五)
Debug: File:(../QWellMan/dao/welldao.cpp) Line:(79)  Query[ "select  w.* from wvWellHeader  w  where  not exists(select * from wvSysRecDel d where w.idwell=d.idwell COLLATE NOCASE and w.idwell=d.IDRec  COLLATE NOCASE) and  exists(select *  from wvSys02 r where w.idwell=r.idwell COLLATE NOCASE)  order by wellname COLLATE NOCASE" ] ,bind[ QMap() ] 
 (2020-02-14 10:33:51 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(128)  Query[ "select  t.*,m.KeyFld as VisableFld from pceMDLTableField t left join pceMDLTableMainIDFields m  on t.KeyTbl=:table  COLLATE NOCASE and t.KeyFld=m.KeyFld COLLATE NOCASE order by m.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellHeader"))) ] 
 (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:51 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:52 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:53 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:54 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Warning: File:() Line:(0) QSqlQuery::value: not positioned on a valid record (2020-02-14 10:33:55 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(64) Profile false 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(74)  Query[ "select d.* from pceUDLSetTblGroupData d,pceUDLSetTblGroup g,pceUDLProfile p                       where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblGroup=g.KeySet COLLATE NOCASE and g.KeySet=d.KeySet COLLATE NOCASE             order by d.DisplayOrder " ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/welldao.cpp) Line:(125)  Query[ "select  w.* from wvWellHeader  w  where  not exists(select * from wvSysRecDel d where w.idwell=d.idwell COLLATE NOCASE  and w.idwell=d.IDRec COLLATE NOCASE) and w.idwell=:id COLLATE NOCASE" ] ,bind[ QMap((":id", QVariant(QString, "584DA8768512478D955C790F5F8163F2"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(285)  Query[ "select  * from pceMDLTable where KeyTbl=:table COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellHeader"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile COLLATE NOCASE and tl.Calculated=false  and p.KeySetTblGroup=t.KeySet COLLATE NOCASE and t.GroupName=:group COLLATE NOCASE and tl.KeyTbl=t.KeyTbl COLLATE NOCASE order by t.DisplayOrder " ] ,bind[ QMap((":group", QVariant(QString, "General"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellHeader"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellHeader"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvExternalData"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvNote"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvNote"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvTask"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvTask"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvDepthAnnotation"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvDepthAnnotation"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile COLLATE NOCASE and tl.Calculated=false  and p.KeySetTblGroup=t.KeySet COLLATE NOCASE and t.GroupName=:group COLLATE NOCASE and tl.KeyTbl=t.KeyTbl COLLATE NOCASE order by t.DisplayOrder " ] ,bind[ QMap((":group", QVariant(QString, "Operations"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJob"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJob"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobProgramPhase"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobProgramPhaseActivity"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobProgramGeoSample"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobProgramMud"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobApproval"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobAFECost"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobContact"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobRig"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigPump"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigPumpOp"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigPumpChk"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigSolidsCentCyc"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigSolidsCentCycChk"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigSolidsShaker"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigSolidsShakerScrn"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigSolidsShakerChk"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigBOP"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigBOPComp"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvjobSupply"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobSupplyAmt"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillBit"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillString"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillStringComp"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillStringCompMotor"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillStringBitNozzle"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillStringDrillParam"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobWellboreGradient"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobMudAdd"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobMudAddAmt"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobReport"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportTimeLog"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportCostGen"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportContacts"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportMudChk"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportPersonnelCount"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobSafetyChk"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobSafetyIncident"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobIntervalProblem"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobIntervalLesson"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobKick"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobKickPres"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobLostCirc"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobMaterialTrans"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile COLLATE NOCASE and tl.Calculated=false  and p.KeySetTblGroup=t.KeySet COLLATE NOCASE and t.GroupName=:group COLLATE NOCASE and tl.KeyTbl=t.KeyTbl COLLATE NOCASE order by t.DisplayOrder " ] ,bind[ QMap((":group", QVariant(QString, "Wellbore, Surveys & Formations"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellbore"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellbore"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellboreSize"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellboreDirSurvey"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellboreDirSurveyData"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellborePBTD"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellboreFormation"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellboreFormationPickOth"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile COLLATE NOCASE and tl.Calculated=false  and p.KeySetTblGroup=t.KeySet COLLATE NOCASE and t.GroupName=:group COLLATE NOCASE and tl.KeyTbl=t.KeyTbl COLLATE NOCASE order by t.DisplayOrder " ] ,bind[ QMap((":group", QVariant(QString, "Casing, Cement & Wellheads"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCas"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCas"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCasComp"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCasCompLnrHngr"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCasCompECP"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCasCompSlottedLnr"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCement"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCement"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCementStage"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCementStageFluid"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCementStageFluidAdd"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCementStageFluidVisc"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellhead"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellhead"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellheadComp"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellheadCompOutlet"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvTestLeakOff"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvTestLeakOff"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile COLLATE NOCASE and tl.Calculated=false  and p.KeySetTblGroup=t.KeySet COLLATE NOCASE and t.GroupName=:group COLLATE NOCASE and tl.KeyTbl=t.KeyTbl COLLATE NOCASE order by t.DisplayOrder " ] ,bind[ QMap((":group", QVariant(QString, "Other in Hole"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvOtherInHole"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvOtherInHole"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvOtherInHoleGP"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvOtherInHolePacker"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile COLLATE NOCASE and tl.Calculated=false  and p.KeySetTblGroup=t.KeySet COLLATE NOCASE and t.GroupName=:group COLLATE NOCASE and tl.KeyTbl=t.KeyTbl COLLATE NOCASE order by t.DisplayOrder " ] ,bind[ QMap((":group", QVariant(QString, "Logs, Cores & Reservoir Tests"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvLog"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvLog"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvLogCurve"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCore"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCore"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTrans"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTrans"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTransDST"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTransFlowPer"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTransGauge"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTransGaugeData"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTransRate"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestRFT"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestRFT"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestRFTData"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile COLLATE NOCASE and tl.Calculated=false  and p.KeySetTblGroup=t.KeySet COLLATE NOCASE and t.GroupName=:group COLLATE NOCASE and tl.KeyTbl=t.KeyTbl COLLATE NOCASE order by t.DisplayOrder " ] ,bind[ QMap((":group", QVariant(QString, "Attachments (all)"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvAttachment"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvAttachment"))) ] 
 (2020-02-14 10:33:59 周五)
Debug: File:(../QWellMan/main.cpp) Line:(73) This is a debug message (2020-02-14 10:35:26 周五)
Warning: File:(../QWellMan/main.cpp) Line:(74) This is a warning message (2020-02-14 10:35:26 周五)
Critical: File:(../QWellMan/main.cpp) Line:(75) This is a critical message (2020-02-14 10:35:26 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(64) Profile false 
 (2020-02-14 10:35:28 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(74)  Query[ "select d.* from pceUDLSetTblGroupData d,pceUDLSetTblGroup g,pceUDLProfile p                       where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblGroup=g.KeySet COLLATE NOCASE and g.KeySet=d.KeySet COLLATE NOCASE             order by d.DisplayOrder " ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:28 周五)
Debug: File:(../QWellMan/dao/welldao.cpp) Line:(125)  Query[ "select  w.* from wvWellHeader  w  where  not exists(select * from wvSysRecDel d where w.idwell=d.idwell COLLATE NOCASE  and w.idwell=d.IDRec COLLATE NOCASE) and w.idwell=:id COLLATE NOCASE" ] ,bind[ QMap((":id", QVariant(QString, "F0DC915D2E174218A46B8B77D56F3920"))) ] 
 (2020-02-14 10:35:28 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(285)  Query[ "select  * from pceMDLTable where KeyTbl=:table COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellHeader"))) ] 
 (2020-02-14 10:35:28 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 10:35:28 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile COLLATE NOCASE and tl.Calculated=false  and p.KeySetTblGroup=t.KeySet COLLATE NOCASE and t.GroupName=:group COLLATE NOCASE and tl.KeyTbl=t.KeyTbl COLLATE NOCASE order by t.DisplayOrder " ] ,bind[ QMap((":group", QVariant(QString, "General"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:28 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:28 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellHeader"))) ] 
 (2020-02-14 10:35:28 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:28 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellHeader"))) ] 
 (2020-02-14 10:35:28 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:28 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvExternalData"))) ] 
 (2020-02-14 10:35:28 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:28 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvNote"))) ] 
 (2020-02-14 10:35:28 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:28 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvNote"))) ] 
 (2020-02-14 10:35:28 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:28 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvTask"))) ] 
 (2020-02-14 10:35:28 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:28 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvTask"))) ] 
 (2020-02-14 10:35:28 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:28 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvDepthAnnotation"))) ] 
 (2020-02-14 10:35:28 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:28 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvDepthAnnotation"))) ] 
 (2020-02-14 10:35:28 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 10:35:28 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile COLLATE NOCASE and tl.Calculated=false  and p.KeySetTblGroup=t.KeySet COLLATE NOCASE and t.GroupName=:group COLLATE NOCASE and tl.KeyTbl=t.KeyTbl COLLATE NOCASE order by t.DisplayOrder " ] ,bind[ QMap((":group", QVariant(QString, "Operations"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:28 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:28 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJob"))) ] 
 (2020-02-14 10:35:28 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:28 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJob"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobProgramPhase"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobProgramPhaseActivity"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobProgramGeoSample"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobProgramMud"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobApproval"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobAFECost"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobContact"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobRig"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigPump"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigPumpOp"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigPumpChk"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigSolidsCentCyc"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigSolidsCentCycChk"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigSolidsShaker"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigSolidsShakerScrn"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigSolidsShakerChk"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigBOP"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigBOPComp"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvjobSupply"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobSupplyAmt"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillBit"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillString"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillStringComp"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillStringCompMotor"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillStringBitNozzle"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillStringDrillParam"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobWellboreGradient"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobMudAdd"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobMudAddAmt"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobReport"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportTimeLog"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportCostGen"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportContacts"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportMudChk"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportPersonnelCount"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobSafetyChk"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobSafetyIncident"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobIntervalProblem"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobIntervalLesson"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobKick"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobKickPres"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobLostCirc"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobMaterialTrans"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile COLLATE NOCASE and tl.Calculated=false  and p.KeySetTblGroup=t.KeySet COLLATE NOCASE and t.GroupName=:group COLLATE NOCASE and tl.KeyTbl=t.KeyTbl COLLATE NOCASE order by t.DisplayOrder " ] ,bind[ QMap((":group", QVariant(QString, "Wellbore, Surveys & Formations"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellbore"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellbore"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellboreSize"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellboreDirSurvey"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellboreDirSurveyData"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellborePBTD"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellboreFormation"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellboreFormationPickOth"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile COLLATE NOCASE and tl.Calculated=false  and p.KeySetTblGroup=t.KeySet COLLATE NOCASE and t.GroupName=:group COLLATE NOCASE and tl.KeyTbl=t.KeyTbl COLLATE NOCASE order by t.DisplayOrder " ] ,bind[ QMap((":group", QVariant(QString, "Casing, Cement & Wellheads"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCas"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCas"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCasComp"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCasCompLnrHngr"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCasCompECP"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCasCompSlottedLnr"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCement"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCement"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCementStage"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCementStageFluid"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCementStageFluidAdd"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCementStageFluidVisc"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellhead"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellhead"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellheadComp"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellheadCompOutlet"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvTestLeakOff"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvTestLeakOff"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile COLLATE NOCASE and tl.Calculated=false  and p.KeySetTblGroup=t.KeySet COLLATE NOCASE and t.GroupName=:group COLLATE NOCASE and tl.KeyTbl=t.KeyTbl COLLATE NOCASE order by t.DisplayOrder " ] ,bind[ QMap((":group", QVariant(QString, "Other in Hole"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvOtherInHole"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvOtherInHole"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvOtherInHoleGP"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvOtherInHolePacker"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile COLLATE NOCASE and tl.Calculated=false  and p.KeySetTblGroup=t.KeySet COLLATE NOCASE and t.GroupName=:group COLLATE NOCASE and tl.KeyTbl=t.KeyTbl COLLATE NOCASE order by t.DisplayOrder " ] ,bind[ QMap((":group", QVariant(QString, "Logs, Cores & Reservoir Tests"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvLog"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvLog"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvLogCurve"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCore"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCore"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTrans"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTrans"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTransDST"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTransFlowPer"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTransGauge"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTransGaugeData"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTransRate"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestRFT"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestRFT"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestRFTData"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile COLLATE NOCASE and tl.Calculated=false  and p.KeySetTblGroup=t.KeySet COLLATE NOCASE and t.GroupName=:group COLLATE NOCASE and tl.KeyTbl=t.KeyTbl COLLATE NOCASE order by t.DisplayOrder " ] ,bind[ QMap((":group", QVariant(QString, "Attachments (all)"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvAttachment"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvAttachment"))) ] 
 (2020-02-14 10:35:29 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(64) Profile false 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(74)  Query[ "select d.* from pceUDLSetTblGroupData d,pceUDLSetTblGroup g,pceUDLProfile p                       where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblGroup=g.KeySet COLLATE NOCASE and g.KeySet=d.KeySet COLLATE NOCASE             order by d.DisplayOrder " ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/welldao.cpp) Line:(125)  Query[ "select  w.* from wvWellHeader  w  where  not exists(select * from wvSysRecDel d where w.idwell=d.idwell COLLATE NOCASE  and w.idwell=d.IDRec COLLATE NOCASE) and w.idwell=:id COLLATE NOCASE" ] ,bind[ QMap((":id", QVariant(QString, "46810E3DFE964362AB21F45017E4220C"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(285)  Query[ "select  * from pceMDLTable where KeyTbl=:table COLLATE NOCASE" ] ,bind[ QMap((":table", QVariant(QString, "wvWellHeader"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile COLLATE NOCASE and tl.Calculated=false  and p.KeySetTblGroup=t.KeySet COLLATE NOCASE and t.GroupName=:group COLLATE NOCASE and tl.KeyTbl=t.KeyTbl COLLATE NOCASE order by t.DisplayOrder " ] ,bind[ QMap((":group", QVariant(QString, "General"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellHeader"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellHeader"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvExternalData"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvNote"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvNote"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvTask"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvTask"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvDepthAnnotation"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvDepthAnnotation"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile COLLATE NOCASE and tl.Calculated=false  and p.KeySetTblGroup=t.KeySet COLLATE NOCASE and t.GroupName=:group COLLATE NOCASE and tl.KeyTbl=t.KeyTbl COLLATE NOCASE order by t.DisplayOrder " ] ,bind[ QMap((":group", QVariant(QString, "Operations"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJob"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJob"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobProgramPhase"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobProgramPhaseActivity"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobProgramGeoSample"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobProgramMud"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobApproval"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobAFECost"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobContact"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobRig"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigPump"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigPumpOp"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigPumpChk"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigSolidsCentCyc"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigSolidsCentCycChk"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigSolidsShaker"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigSolidsShakerScrn"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigSolidsShakerChk"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigBOP"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobRigBOPComp"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvjobSupply"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobSupplyAmt"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillBit"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillString"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillStringComp"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillStringCompMotor"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillStringBitNozzle"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobDrillStringDrillParam"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobWellboreGradient"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobMudAdd"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobMudAddAmt"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobReport"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportTimeLog"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportCostGen"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportContacts"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportMudChk"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobReportPersonnelCount"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobSafetyChk"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobSafetyIncident"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobIntervalProblem"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobIntervalLesson"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobKick"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobKickPres"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobLostCirc"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvJobMaterialTrans"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile COLLATE NOCASE and tl.Calculated=false  and p.KeySetTblGroup=t.KeySet COLLATE NOCASE and t.GroupName=:group COLLATE NOCASE and tl.KeyTbl=t.KeyTbl COLLATE NOCASE order by t.DisplayOrder " ] ,bind[ QMap((":group", QVariant(QString, "Wellbore, Surveys & Formations"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellbore"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellbore"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellboreSize"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellboreDirSurvey"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellboreDirSurveyData"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellborePBTD"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellboreFormation"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellboreFormationPickOth"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile COLLATE NOCASE and tl.Calculated=false  and p.KeySetTblGroup=t.KeySet COLLATE NOCASE and t.GroupName=:group COLLATE NOCASE and tl.KeyTbl=t.KeyTbl COLLATE NOCASE order by t.DisplayOrder " ] ,bind[ QMap((":group", QVariant(QString, "Casing, Cement & Wellheads"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCas"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCas"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCasComp"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCasCompLnrHngr"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCasCompECP"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCasCompSlottedLnr"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCement"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCement"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCementStage"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCementStageFluid"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCementStageFluidAdd"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCementStageFluidVisc"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellhead"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellhead"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellheadComp"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellheadCompOutlet"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvTestLeakOff"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvTestLeakOff"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile COLLATE NOCASE and tl.Calculated=false  and p.KeySetTblGroup=t.KeySet COLLATE NOCASE and t.GroupName=:group COLLATE NOCASE and tl.KeyTbl=t.KeyTbl COLLATE NOCASE order by t.DisplayOrder " ] ,bind[ QMap((":group", QVariant(QString, "Other in Hole"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvOtherInHole"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvOtherInHole"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvOtherInHoleGP"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvOtherInHolePacker"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile COLLATE NOCASE and tl.Calculated=false  and p.KeySetTblGroup=t.KeySet COLLATE NOCASE and t.GroupName=:group COLLATE NOCASE and tl.KeyTbl=t.KeyTbl COLLATE NOCASE order by t.DisplayOrder " ] ,bind[ QMap((":group", QVariant(QString, "Logs, Cores & Reservoir Tests"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvLog"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvLog"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvLogCurve"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCore"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvCore"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTrans"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTrans"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTransDST"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTransFlowPer"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTransGauge"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTransGaugeData"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestTransRate"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestRFT"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestRFT"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvWellTestRFTData"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(86) Profile false (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(96)  Query[ "select tl.* from pceUDLSetTblGroupTblData t,pceUDLProfile p,pceListTbl tl                       where p.KeyProfile=:profile COLLATE NOCASE and tl.Calculated=false  and p.KeySetTblGroup=t.KeySet COLLATE NOCASE and t.GroupName=:group COLLATE NOCASE and tl.KeyTbl=t.KeyTbl COLLATE NOCASE order by t.DisplayOrder " ] ,bind[ QMap((":group", QVariant(QString, "Attachments (all)"))(":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvAttachment"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/udldao.cpp) Line:(115)  Query[ "select hd.KeyTbl from pceUDLProfile p ,pceUDLSetTblHiddenData hd                      where p.KeyProfile=:profile COLLATE NOCASE and p.KeySetTblHidden=hd.KeySet COLLATE NOCASE" ] ,bind[ QMap((":profile", QVariant(QString, "Drilling - All Data"))) ] 
 (2020-02-14 10:36:53 周五)
Debug: File:(../QWellMan/dao/mdldao.cpp) Line:(301)  Query[ "select t2.* from pceMDLTableChildren c,pceMDLTable t,pceMDLTable t2              where   c.KeyTbl=:table COLLATE NOCASE and t2.Calculated=false and t.KeyTbl=c.KeyTbl COLLATE NOCASE and t2.KeyTbl=c.KeyTblChild COLLATE NOCASE and not exists(select * from pceMDLTableGrpLink l where l.KeyTbl=c.KeyTblChild COLLATE NOCASE)             and c.KeyTblChild not in ('wvAnnularFluid','wvCasCompTally','wvJobDrillStringCompTally','wvJobRentalItem','wvJobReportCostRental','wvJobReportDischarge','wvJobReportFluidsLease','wvJobReportFluidsWell','wvJobReportOffshore','wvJobReportSafetyStop','wvJobReportSupportVes','wvJobSafetyIncidentVict','wvOtherStr','wvPerforation','wvPrimeMover','wvProdSetting','wvProduction','wvPumpingUnit','wvRiser','wvRod','wvStimTreat','wvSwab','wvTallyCas','wvTallyDrill','wvTallyTub','wvTestEquip','wvTestSSSV','wvTub','wvTubCompTally','wvWHDrive','wvWellAttributes','wvWellTestFluidAnalysis','wvWellTestFluidLevel','wvWellTestInject','wvWellTestPresTrav','wvWellTestProd','wvWellboreOther','wvWellboreReservoir','wvZone') order by c.DisplayOrder " ] ,bind[ QMap((":table", QVariant(QString, "wvAttachment"))) ] 
 (2020-02-14 10:36:53 周五)
